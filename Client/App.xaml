<Application x:Class="Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <!--ЦВЕТА-->

        <SolidColorBrush x:Key="CustomGrey" Color="#FF4D4D4D"/>
        <SolidColorBrush x:Key="CustomBlack" Color="#FF2B2B2B"/>
        <SolidColorBrush x:Key="CustomTransparentSilver" Color="#44969696"/>
        <SolidColorBrush x:Key="CustomWhite" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="CustomSilver" Color="#FF969696"/>
        <SolidColorBrush x:Key="CustomSilverRgb" Color="#969"/>
        <SolidColorBrush x:Key="CustomLightSilver" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="OriginalSilver" Color="Silver"/>
        <SolidColorBrush x:Key="CustomGold" Color="#FFFF8200"/>
        <SolidColorBrush x:Key="CustomRed" Color="#FFFF0000"/>

        <!--КНОПКИ-->

        <!--Системные кнопки-->
        <Style x:Key="SytemButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Button.BorderBrush" Value="{StaticResource CustomGrey}"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10px,10px,10px,10px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomBlack}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Кнопки главного меню-->
        <Style x:Key="MainMenu" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="Transparent"/>
            <Setter Property="Button.BorderBrush" Value="Transparent"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Тёмные кнопки-->
        <Style x:Key="DarkButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="{StaticResource CustomBlack}"/>
            <Setter Property="Button.BorderBrush" Value="{StaticResource CustomBlack}"/>
            <Setter Property="Button.Foreground" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="Button.FontFamily" Value="Georgia"/>
            <Setter Property="Button.FontSize" Value="25px"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлые кнопки-->
        <Style x:Key="LightButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="25px"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
                </Trigger>
                <!--Значения при выключенном элементе-->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Cursor" Value="Arrow" />
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                    <Setter Property="Foreground" Value="{StaticResource CustomWhite}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлка кнопка выпадающего списка-->
        <Style x:Key="LightComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--Выставляем границу элемента-->
                        <Border x:Name="Border"
                                Background="{StaticResource CustomWhite}"
                                Margin="0,0.3,0,-0.5">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--Значения при наведении мыши-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CustomLightSilver}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <!--Значение при выборе-->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CustomLightSilver}"/>
                                <!--<Setter TargetName="Border" Property="CornerRadius" Value="0,5,0,0"/>-->
                            </Trigger>
                            <!--Значение при выключенном элементе-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CustomLightSilver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлые переключатели-->
        <Style x:Key="LightCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <!--Устанавливаем шабон-->
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100px"/>
                                <ColumnDefinition Width="300px"/>
                            </Grid.ColumnDefinitions>
                            <Border Width="70px"
                                    Height="30px"
                                    Grid.Column="0"
                                    CornerRadius="15"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border x:Name="border"
                                            Width="25px"
                                            Height="25px"
                                            CornerRadius="40"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            Margin="1 0"
                                            Background="{StaticResource CustomLightSilver}">
                                        <Border.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="txt"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{StaticResource CustomLightSilver}"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"/>
                        </Grid>
                        <!--Устанавливаем поведение-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Text"
                                        TargetName="txt"
                                        Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                             To="45"
                                                             Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                             To="0"
                                                             Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text"
                                        TargetName="txt"
                                        Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Серые кнопки-->
        <Style x:Key="SilverButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="Margin" Value="0,0.5,0,-0.5"/>
            <!--Устанавливаем шиблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10px,10px,10px,10px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Системные кнопки-->
        <Style x:Key="SmallSytemButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Button.BorderBrush" Value="{StaticResource CustomGrey}"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="5px,5px,5px,5px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius"
                            Value="10"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomBlack}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Системные кнопки-->
        <Style x:Key="TransparentButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="Transparent"/>
            <Setter Property="Button.BorderBrush" Value="Transparent"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="5px,5px,5px,5px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomTransparentSilver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлая кнопка дней календаря-->
        <Style x:Key="LightCalendarDayButtonStyle" TargetType="{x:Type CalendarDayButton}">
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{StaticResource CustomWhite}" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="FontSize" Value="15px"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarDayButton}">
                        <Grid x:Name="Grid" Margin="{TemplateBinding Margin}">
                            <Border x:Name="Bg"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="3"
                                    Margin="1"
                                    BorderThickness="1"
                                    BorderBrush="{x:Null}"/>
                            <ContentPresenter x:Name="NormalText"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="5,2,5,2"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{StaticResource CustomSilver}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource CustomSilver}" TargetName="NormalText"/>
                            </Trigger>
                            <Trigger Property="IsToday" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource CustomSilver}" TargetName="NormalText"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource CustomSilver}" TargetName="NormalText"/>
                            </Trigger>
                            <Trigger Property="IsBlackedOut" Value="True">
                                <Setter Property="Opacity" Value="0.4" TargetName="Grid"></Setter>
                            </Trigger>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Opacity" Value="0.4" TargetName="Grid"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" TargetName="Grid"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлая кнопка календаря-->
        <Style x:Key="LightCalendarButtonStyle" TargetType="{x:Type CalendarButton}">
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="FontSize" Value="15px"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarButton}">
                        <Grid x:Name="Grid" Margin="{TemplateBinding Margin}">
                            <Border x:Name="Bg"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="3"
                                    Margin="1"
                                    BorderThickness="1"
                                    BorderBrush="{x:Null}"/>
                            <ContentPresenter x:Name="NormalText"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="5,2,5,2"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              TextElement.Foreground="{StaticResource CustomSilver}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource CustomSilver}" TargetName="NormalText"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}" TargetName="Bg"></Setter>
                                <Setter Property="TextElement.Foreground" Value="{StaticResource CustomSilver}" TargetName="NormalText"/>
                            </Trigger>
                            <Trigger Property="IsInactive" Value="True">
                                <Setter Property="Opacity" Value="0.4" TargetName="Grid"></Setter>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" TargetName="Grid"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ПОЛЯ ВВОДА-->

        <!--Светлые поля ввода-->
        <Style x:Key="LightTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Padding" Value="40px,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="Cursor" Value="IBeam"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Упрощённые светлые поля ввода-->
        <Style x:Key="SimplifiedLightTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Padding" Value="40px,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="Cursor" Value="IBeam"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлое поле ввода выпадающего спика-->
        <Style x:Key="LightComboBoxTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--Значения при наведении-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
                                <Setter Property="Cursor" Value="IBeam"/>
                                <!--<Setter TargetName="Border" Property="CornerRadius" Value="5,0,0,0"/>-->
                            </Trigger>
                            <!--Значения при отключённом состоянии-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлое поле ввода редактируемого элементы-->
        <Style x:Key="EditLightTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomSilver}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Упрощённые серые поля ввода-->
        <Style x:Key="SilverTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Padding" Value="40px,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="IBeam"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Ствелое поле ввода календаря-->
        <Style x:Key="LightDatePickerTextBoxStyle" TargetType="{x:Type DatePickerTextBox}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                        <TextBox BorderThickness="0"
                                 Text="{Binding Path=SelectedDate, StringFormat='dd.MM.yyyy', RelativeSource={RelativeSource AncestorType=DatePicker}}"
                                 Foreground="{StaticResource CustomSilver}"
                                 FontFamily="Georgia"
                                 FontSize="20px"
                                 SelectionBrush="{StaticResource CustomGrey}"
                                 VerticalContentAlignment="Center"
                                 Padding="5,0,5,0"
                                 Background="{x:Null}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--СПИСКИ-->

        <!--Тёмный список-->
        <Style x:Key="DarkList" TargetType="{x:Type ListBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
        </Style>
        <!--Элемент тёмного списка-->
        <Style x:Key="DarkListItem" TargetType="{x:Type ListBoxItem}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Margin="40px,0,0,0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значения при выборе-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значения при выборе-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Элемент сложного тёмного списка-->
        <Style x:Key="DarkDifficultListItem" TargetType="{x:Type ListBoxItem}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Margin="40px,0,0,0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значение при программном выборе-->
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--Простой элемент тёмного списка-->
        <Style x:Key="SimpleDarkListItem" TargetType="{x:Type ListBoxItem}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значение при программном выборе-->
                <DataTrigger Binding="{Binding Path=IsSelected}" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <!--Светлый выпадающий список-->
        <Style x:Key="LightComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="IsEditable" Value="True"/>
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="17px"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_EditableTextBox"
                                     Style="{StaticResource LightComboBoxTextBox}"
                                     Padding="40px,0,0,0"
                                     Height="{TemplateBinding Height}"/>
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="1"
                                          Margin="0"
                                          Height="{TemplateBinding Height}"
                                          Style="{StaticResource LightComboBoxToggleButton}"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <Path Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="{StaticResource CustomSilver}" />
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="40px,0,0,0"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Focusable="False"
                                   AllowsTransparency="True"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    Background="{StaticResource CustomWhite}"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Элемент светлого выпадающего списка-->
        <Style x:Key="LightComboBoxItem"
               TargetType="{x:Type ComboBoxItem}">
            <!--Значения по умолчанию-->
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значения при выбранном элементе-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--НАДПИСИ-->

        <!--Внутренние исключения-->
        <Style x:Key="InnerExceptionTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGold}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <!--Критические исключения-->
        <Style x:Key="CriticalExceptionTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomRed}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <!--Светлые надписи-->
        <Style x:Key="LightTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="25px"/>
            <Setter Property="Foreground" Value="{StaticResource OriginalSilver}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!--ТАБЛИЦЫ-->

        <!--Светлая таблица-->
        <Style x:Key="LightDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="Margin" Value="50px,0,0,0"/>
        </Style>
        <!--Светлые отступы столбцов таблицы-->
        <Style x:Key="LightColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлый заголовок таблицы-->
        <Style x:Key="LightDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderThickness" Value="1px"/>
            <!--Устаналиваем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder"
                                    BorderThickness="0,0,0,2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Grid.ColumnSpan="2"/>
                            <ContentPresenter Margin="5"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <Path x:Name="SortArrow"
                                  Visibility="Collapsed"
                                  Data="M 0,0 L 1,0 0.5,1 z"
                                  Stretch="Fill"
                                  Grid.Column="1"
                                  Width="8"
                                  Height="6"
                                  Fill="{StaticResource CustomGrey}"
                                  Margin="0,0,8,0"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5, 0.4"/>
                            <Rectangle Width="1"
                                       Fill="{StaticResource CustomGrey}"
                                       HorizontalAlignment="Right"
                                       Grid.ColumnSpan="2"/>
                            <Rectangle Width="1" Margin="0,0,1,0"
                                       Fill="{StaticResource CustomGrey}"
                                       HorizontalAlignment="Right"
                                       Grid.ColumnSpan="2"/>
                            <Thumb x:Name="PART_LeftHeaderGripper"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource LightColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper"
                                   Grid.Column="1"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource LightColumnHeaderGripperStyle}"/>
                        </Grid>
                        <!--Устанавливаем поведение-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CustomSilver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлые строки таблицы-->
        <Style x:Key="LightDataGridRows" TargetType="{x:Type DataGridRow}">
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="0px"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлые ячейки таблицы-->
        <Style x:Key="LightDataGridCells" TargetType="{x:Type DataGridCell}">
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="0px"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлые заголовки строк-->
        <Style x:Key="LightDataGridRowHeaders" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Width" Value="15px"/>
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomSilver}"/>
            <Setter Property="BorderThickness" Value="1px"/>
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="1px"/>
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                </Trigger>
                <Trigger Property="IsRowSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="1px"/>
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--КАЛЕНДАРИ-->

        <!--Светлый выбор даты-->
        <Style x:Key="LightDatePickerStyle" TargetType="{x:Type DatePicker}">
            <!--Значения по умолчанию-->
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="SelectedDateFormat" Value="Short"/>
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="PART_DisabledVisual"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="PART_Root"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="Stretch"
                                  Margin="0,0,0,0" >
                                <Grid.Resources>
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Background="{StaticResource CustomGrey}"
                                              FlowDirection="LeftToRight"
                                              HorizontalAlignment="Center"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Width="32"
                                              Height="32">
                                            <Path Fill="{StaticResource CustomSilver}"
                                                  HorizontalAlignment="Center"
                                                  Stretch="Fill"
                                                  VerticalAlignment="Center"
                                                  Data="M 890.127 145.672 h -43.389 V 132.78 c 0 -38.644 -31.466 -70.234 -69.922 -70.234 h -1.032 c -38.458 0 -69.922 31.59 -69.922 70.234 v 12.892 h -386.7 V 132.78 c 0 -38.644 -31.465 -70.234 -69.922 -70.234 h -1.063 c -38.457 0 -69.923 31.59 -69.923 70.234 v 12.892 h -43.296 c -38.458 0 -69.923 31.622 -69.923 70.207 v 671.446 c 0 38.644 31.466 70.236 69.923 70.236 h 755.17 c 38.458 0 69.922 -31.592 69.922 -70.236 V 215.879 c 0 -38.585 -31.464 -70.207 -69.923 -70.207 Z M 733.83 132.78 c 0 -23.222 18.793 -42.139 41.954 -42.139 h 1.032 c 23.13 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.824 42.14 -41.954 42.14 h -1.032 c -23.161 0 -41.954 -18.916 -41.954 -42.14 V 132.779 Z m -527.607 0 c 0 -23.222 18.793 -42.139 41.955 -42.139 h 1.063 c 23.098 0 41.954 18.918 41.954 42.139 v 124.927 c 0 23.224 -18.856 42.14 -41.954 42.14 h -1.063 c -23.162 0 -41.955 -18.916 -41.955 -42.14 V 132.779 Z m 683.904 768.626 H 134.958 c -7.585 0 -13.985 -6.525 -13.985 -14.08 V 393.649 h 783.138 v 493.676 c 0 7.555 -6.399 14.08 -13.984 14.08 Z" />
                                            <Path Fill="{StaticResource CustomSilver}"
                                                  Margin="7"
                                                  HorizontalAlignment="Center"
                                                  Stretch="Fill"
                                                  VerticalAlignment="Center"
                                                  Data="M 223.755 494.2 H 352.78 v 63.488 H 223.755 V 494.2 Z M 449.035 494.2 h 128 v 63.488 h -128 V 494.2 Z M 673.291 494.2 h 125.952 v 63.488 H 673.291 V 494.2 Z M 223.755 623.224 H 352.78 v 62.464 H 223.755 v -62.464 Z M 449.035 623.224 h 128 v 62.464 h -128 v -62.464 Z M 673.291 623.224 h 125.952 v 62.464 H 673.291 v -62.464 Z M 223.755 749.176 H 352.78 v 65.536 H 223.755 v -65.536 Z M 449.035 749.176 h 128 v 65.536 h -128 v -65.536 Z M 673.291 749.176 h 125.952 v 65.536 H 673.291 v -65.536 Z" StrokeThickness="2"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Button x:Name="PART_Button"
                                        Grid.Column="1"
                                        Foreground="{TemplateBinding Foreground}"
                                        Focusable="False"
                                        HorizontalAlignment="Left"
                                        Margin="3,0,3,0"
                                        Grid.Row="0"
                                        Template="{StaticResource DropDownButtonTemplate}"
                                        VerticalAlignment="Center"
                                        Width="30"/>
                                <DatePickerTextBox x:Name="PART_TextBox"
                                                   Grid.Column="0"
                                                   Foreground="{TemplateBinding Foreground}"
                                                   Focusable="{TemplateBinding Focusable}"
                                                   HorizontalContentAlignment="Stretch"
                                                   Grid.Row="0"
                                                   VerticalContentAlignment="Center"
                                                   Style="{DynamicResource LightDatePickerTextBoxStyle}"
                                                   Background="{x:Null}"
                                                   Margin="0,0,0,0" />
                                <Grid x:Name="PART_DisabledVisual"
                                      Grid.ColumnSpan="2"
                                      Grid.Column="0"
                                      IsHitTestVisible="False"
                                      Opacity="0"
                                      Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0" Fill="{StaticResource CustomWhite}"
                                               RadiusY="1"
                                               Grid.Row="0"
                                               RadiusX="1"/>
                                    <Rectangle Grid.Column="1"
                                               Fill="{StaticResource CustomWhite}"
                                               Height="32" Margin="3,0,3,0"
                                               RadiusY="1"
                                               Grid.Row="0"
                                               RadiusX="1"
                                               Width="32"/>
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           Placement="Bottom"
                                           PlacementTarget="{Binding ElementName=PART_TextBox}"
                                           StaysOpen="False"/>
                                </Grid>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлый календарь-->
        <Style x:Key="LightCalendar" TargetType="{x:Type Calendar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource LightCalendarDayButtonStyle}"/>
            <Setter Property="CalendarButtonStyle" Value="{DynamicResource LightCalendarButtonStyle}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Width" Value="200px"/>
            <Setter Property="IsTodayHighlighted" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Calendar}">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      BorderBrush="{TemplateBinding BorderBrush}" 
                                      FontFamily="{TemplateBinding FontFamily}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}"
                                      FontSize="{TemplateBinding FontSize}"
                                      Style="{DynamicResource LightCalendarItemStyle}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлый элемент календара-->
        <Style x:Key="LightCalendarItemStyle"
                TargetType="{x:Type CalendarItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CalendarItem}">
                        <ControlTemplate.Resources>
                            <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                                <TextBlock Foreground="{StaticResource CustomGrey}"
                                           FontWeight="Bold"
                                           FontSize="15px"
                                           FontFamily="Georgia"
                                           Margin="0,6,0,6"
                                           Text="{Binding}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" />
                            </DataTemplate>
                        </ControlTemplate.Resources>
                        <Grid x:Name="PART_Root">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledColor"
                                                 Color="#FFFFFFFF"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0"
                                                             To="1"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Storyboard.TargetName="PART_DisabledVisual" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="1">
                                <Border BorderBrush="#FFFFFFFF"
                                        BorderThickness="2"
                                        CornerRadius="1">
                                    <Grid>
                                        <Grid.Resources>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="40px" />
                                            <RowDefinition Height="*" />
                                        </Grid.RowDefinitions>
                                        <Button x:Name="PART_PreviousButton"
                                                Style="{StaticResource TransparentButton}"
                                                Focusable="False"
                                                HorizontalAlignment="Left"
                                                Grid.Column="0"
                                                Grid.Row="0"
                                                Height="30px"
                                                Width="30px">
                                            <ContentControl>
                                                <Image Source="/Dependens/Images/less_then.png"/>
                                            </ContentControl>                                            
                                        </Button>
                                        <Button x:Name="PART_HeaderButton"
                                                Style="{StaticResource TransparentButton}"
                                                Foreground="{StaticResource CustomGrey}"
                                                FontFamily="Georgia"
                                                FontSize="15px"
                                                FontWeight="Bold"
                                                Focusable="False"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Height="30px"
                                                Grid.Column="1"
                                                Grid.Row="0"/>
                                        <Button x:Name="PART_NextButton"
                                                Style="{StaticResource TransparentButton}"
                                                Focusable="False"
                                                HorizontalAlignment="Right"
                                                Grid.Column="2"
                                                Grid.Row="0"
                                                Height="30px"
                                                Width="30px">
                                            <ContentControl>
                                                <Image Source="/Dependens/Images/more_then.png"/>
                                            </ContentControl>
                                        </Button>
                                        <Grid x:Name="PART_MonthView"
                                              Visibility="Visible"
                                              Grid.ColumnSpan="3"
                                              Grid.Row="1"
                                              Margin="3,0,3,0"
                                              HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                        </Grid>
                                        <Grid x:Name="PART_YearView"
                                              Visibility="Hidden"
                                              Grid.ColumnSpan="3"
                                              Grid.Row="1"
                                              HorizontalAlignment="Center">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                        </Grid>
                                    </Grid>
                                </Border>
                            </Border>
                            <Rectangle x:Name="PART_DisabledVisual"
                                       Fill="{StaticResource CustomLightSilver}"
                                       Opacity="0"
                                       RadiusY="2"
                                       RadiusX="2"
                                       Stretch="Fill"
                                       Stroke="{StaticResource CustomLightSilver}"
                                       StrokeThickness="1"
                                       Visibility="Collapsed" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
                            </Trigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                                         Value="Year">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}"
                                         Value="Decade">
                                <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                                <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>
