<Application x:Class="Client.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        
        
        <!--ЦВЕТА-->

        <SolidColorBrush x:Key="CustomGrey" Color="#FF4D4D4D"/>
        <SolidColorBrush x:Key="CustomBlack" Color="#FF2B2B2B"/>
        <SolidColorBrush x:Key="CustomTransparentSilver" Color="#44969696"/>
        <SolidColorBrush x:Key="CustomWhite" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="CustomSilver" Color="#FF969696"/>
        <SolidColorBrush x:Key="CustomLightSilver" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="OriginalSilver" Color="Silver"/>
        <SolidColorBrush x:Key="CustomGold" Color="#FFFF8200"/>
        <SolidColorBrush x:Key="CustomRed" Color="#FFFF0000"/>


        <!--КНОПКИ-->
        
        <!--Системные кнопки-->
        <Style x:Key="SytemButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Button.BorderBrush" Value="{StaticResource CustomGrey}"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10px,10px,10px,10px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="10"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomBlack}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Кнопки главного меню-->
        <Style x:Key="MainMenu" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="Transparent"/>
            <Setter Property="Button.BorderBrush" Value="Transparent"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Тёмные кнопки-->
        <Style x:Key="DarkButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="{StaticResource CustomBlack}"/>
            <Setter Property="Button.BorderBrush" Value="{StaticResource CustomBlack}"/>
            <Setter Property="Button.Foreground" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="Button.FontFamily" Value="Georgia"/>
            <Setter Property="Button.FontSize" Value="25px"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлые кнопки-->
        <Style x:Key="LightButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="25px"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
                </Trigger>
                <!--Значения при выключенном элементе-->
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Cursor" Value="Arrow" />
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                    <Setter Property="Foreground" Value="{StaticResource CustomWhite}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлка кнопка выпадающего списка-->
        <Style x:Key="LightComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <!--Выставляем границу элемента-->
                        <Border x:Name="Border"
                                Background="{StaticResource CustomWhite}"
                                Margin="0,0.3,0,-0.5">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--Значения при наведении мыши-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CustomLightSilver}"/>
                                <Setter Property="Cursor" Value="Hand"/>
                            </Trigger>
                            <!--Значение при выборе-->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CustomLightSilver}"/>
                                <!--<Setter TargetName="Border" Property="CornerRadius" Value="0,5,0,0"/>-->
                            </Trigger>
                            <!--Значение при выключенном элементе-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource CustomLightSilver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлые переключатели-->
        <Style x:Key="LightCheckBox" TargetType="{x:Type CheckBox}">
            <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <!--Устанавливаем шабон-->
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100px"/>
                                <ColumnDefinition Width="300px"/>
                            </Grid.ColumnDefinitions>
                            <Border Width="70px"
                                    Height="30px"
                                    Grid.Column="0"
                                    CornerRadius="15"
                                    Background="{TemplateBinding Background}">
                                <Grid>
                                    <Border x:Name="border"
                                            Width="25px"
                                            Height="25px"
                                            CornerRadius="40"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"
                                            Margin="1 0"
                                            Background="{StaticResource CustomLightSilver}">
                                        <Border.RenderTransform>
                                            <TranslateTransform X="0"/>
                                        </Border.RenderTransform>
                                    </Border>
                                </Grid>
                            </Border>
                            <TextBlock x:Name="txt"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{StaticResource CustomLightSilver}"
                                       Grid.Column="1"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Left"/>
                        </Grid>
                        <!--Устанавливаем поведение-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Text"
                                        TargetName="txt"
                                        Value="{Binding Tag,RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                             To="45"
                                                             Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="border"
                                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                             To="0"
                                                             Duration="00:00:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Text"
                                        TargetName="txt"
                                        Value="{Binding Content,RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Серые кнопки-->
        <Style x:Key="SilverButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="Margin" Value="0,0.5,0,-0.5"/>
            <!--Устанавливаем шиблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10px,10px,10px,10px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Системные кнопки-->
        <Style x:Key="SmallSytemButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Button.BorderBrush" Value="{StaticResource CustomGrey}"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="5px,5px,5px,5px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius"
                            Value="10"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomBlack}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Системные кнопки-->
        <Style x:Key="TransparentButton" TargetType="Button">
            <!--Значения по умолчанию-->
            <Setter Property="Button.Background" Value="Transparent"/>
            <Setter Property="Button.BorderBrush" Value="Transparent"/>
            <!--Привязываем через шаблон фон к background-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Margin="5px,5px,5px,5px"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <Setter Property="Background" Value="{StaticResource CustomTransparentSilver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--ПОЛЯ ВВОДА-->
        
        <!--Светлые поля ввода-->
        <Style x:Key="LightTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Padding" Value="40px,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <!--Значения для границ-->
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="16"/>
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="Cursor" Value="IBeam"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Упрощённые светлые поля ввода-->
        <Style x:Key="SimplifiedLightTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Padding" Value="40px,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
                    <Setter Property="Cursor" Value="IBeam"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлое поле ввода выпадающего спика-->
        <Style x:Key="LightComboBoxTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--Значения при наведении-->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
                                <Setter Property="Cursor" Value="IBeam"/>
                                <!--<Setter TargetName="Border" Property="CornerRadius" Value="5,0,0,0"/>-->
                            </Trigger>
                            <!--Значения при отключённом состоянии-->
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                                <Setter Property="Cursor" Value="Arrow"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлое поле ввода редактируемого элементы-->
        <Style x:Key="EditLightTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomSilver}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Упрощённые серые поля ввода-->
        <Style x:Key="SilverTextBox" TargetType="{x:Type TextBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Padding" Value="40px,0,0,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="SelectionBrush" Value="{StaticResource CustomGrey}"/>
            <!--Через шаблон привязываем основные свойства-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="IBeam"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--СПИСКИ-->

        <!--Тёмный список-->
        <Style x:Key="DarkList" TargetType="{x:Type ListBox}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
        </Style>
        <!--Элемент тёмного списка-->
        <Style x:Key="DarkListItem" TargetType="{x:Type ListBoxItem}">
            <!--Значения по умолчанию-->
            <Setter Property="Background" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Left"
                                              VerticalAlignment="Center"
                                              Margin="40px,0,0,0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значения при выборе-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлый выпадающий список-->
        <Style x:Key="LightComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="IsEditable" Value="True"/>
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition MaxWidth="17px"/>
                            </Grid.ColumnDefinitions>
                            <TextBox Name="PART_EditableTextBox"
                                     Style="{StaticResource LightComboBoxTextBox}"
                                     Padding="40px,0,0,0"
                                     Height="{TemplateBinding Height}"/>
                            <ToggleButton x:Name="ToggleButton"
                                          Grid.Column="1"
                                          Margin="0"
                                          Height="{TemplateBinding Height}"
                                          Style="{StaticResource LightComboBoxToggleButton}"
                                          Focusable="False"
                                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                          ClickMode="Press">
                                <Path Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="M 0 0 L 4 4 L 8 0 Z"
                                      Fill="{StaticResource CustomSilver}" />
                            </ToggleButton>
                            <ContentPresenter Name="ContentSite"
                                              Content="{TemplateBinding SelectionBoxItem}" 
                                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="Left"
                                              Margin="40px,0,0,0"/>
                            <Popup Name="Popup"
                                   Placement="Bottom"
                                   IsOpen="{TemplateBinding IsDropDownOpen}"
                                   Focusable="False"
                                   AllowsTransparency="True"
                                   PopupAnimation="Slide">
                                <Grid Name="DropDown"
                                      SnapsToDevicePixels="True"
                                      MinWidth="{TemplateBinding ActualWidth}"
                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <ScrollViewer Margin="0,0,0,0" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    Background="{StaticResource CustomWhite}"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Элемент светлого выпадающего списка-->
        <Style x:Key="LightComboBoxItem"
               TargetType="{x:Type ComboBoxItem}">
            <!--Значения по умолчанию-->
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomWhite}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{StaticResource CustomSilver}"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <!--Значения при наведении-->
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
                <!--Значения при выбранном элементе-->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        
        <!--НАДПИСИ-->
        
        <!--Внутренние исключения-->
        <Style x:Key="InnerExceptionTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGold}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <!--Критические исключения-->
        <Style x:Key="CriticalExceptionTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomRed}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>
        <!--Светлые надписи-->
        <Style x:Key="LightTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="25px"/>
            <Setter Property="Foreground" Value="{StaticResource OriginalSilver}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
        </Style>

        <!--ТАБЛИЦА-->

        <!--Светлая таблица-->
        <Style x:Key="LightDataGridStyle" TargetType="{x:Type DataGrid}">
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="CanUserReorderColumns" Value="False"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserResizeRows" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="Margin" Value="50px,0,0,0"/>
        </Style>
        <!--Светлые отступы столбцов таблицы-->
        <Style x:Key="LightColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Cursor" Value="SizeWE"/>
            <!--Устанавливаем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлый заголовок таблицы-->
        <Style x:Key="LightDataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Georgia"/>
            <Setter Property="FontSize" Value="20px"/>
            <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
            <Setter Property="BorderThickness" Value="1px"/>
            <!--Устаналиваем шаблон-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder"
                                    BorderThickness="0,0,0,2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Grid.ColumnSpan="2"/>
                            <ContentPresenter Margin="5"
                                              VerticalAlignment="Center"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <Path x:Name="SortArrow"
                                  Visibility="Collapsed"
                                  Data="M 0,0 L 1,0 0.5,1 z"
                                  Stretch="Fill"
                                  Grid.Column="1"
                                  Width="8"
                                  Height="6"
                                  Fill="{StaticResource CustomGrey}"
                                  Margin="0,0,8,0"
                                  VerticalAlignment="Center"
                                  RenderTransformOrigin="0.5, 0.4"/>
                            <Rectangle Width="1"
                                       Fill="{StaticResource CustomGrey}"
                                       HorizontalAlignment="Right"
                                       Grid.ColumnSpan="2"/>
                            <Rectangle Width="1" Margin="0,0,1,0"
                                       Fill="{StaticResource CustomGrey}"
                                       HorizontalAlignment="Right"
                                       Grid.ColumnSpan="2"/>
                            <Thumb x:Name="PART_LeftHeaderGripper"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource LightColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper"
                                   Grid.Column="1"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource LightColumnHeaderGripperStyle}"/>
                        </Grid>
                        <!--Устанавливаем поведение-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="{StaticResource CustomSilver}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Светлые строки таблицы-->
        <Style x:Key="LightDataGridRows" TargetType="{x:Type DataGridRow}">
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="0px"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлые ячейки таблицы-->
        <Style x:Key="LightDataGridCells" TargetType="{x:Type DataGridCell}">
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
                    <Setter Property="Foreground" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="0px"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Светлые заголовки строк-->
        <Style x:Key="LightDataGridRowHeaders" TargetType="{x:Type DataGridRowHeader}">
            <Setter Property="Width" Value="15px"/>
            <Setter Property="Background" Value="{StaticResource CustomLightSilver}"/>
            <Setter Property="BorderBrush" Value="{StaticResource CustomSilver}"/>
            <Setter Property="BorderThickness" Value="1px"/>
            <!--Устанавливаем поведение-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="1px"/>
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                </Trigger>
                <Trigger Property="IsRowSelected" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource CustomGrey}"/>
                    <Setter Property="BorderThickness" Value="1px"/>
                    <Setter Property="Background" Value="{StaticResource CustomSilver}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
